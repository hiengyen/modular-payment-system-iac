
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
  [33m~[0m update in-place[0m

Terraform will perform the following actions:

[1m  # module.ai_ml.aws_sagemaker_endpoint.main[0m will be created
[0m  [32m+[0m[0m resource "aws_sagemaker_endpoint" "main" {
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m endpoint_config_name = "modular-payment-system-sagemaker-endpoint-config"
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m name                 = "modular-payment-system-sagemaker-endpoint"
      [32m+[0m[0m region               = "ap-southeast-1"
      [32m+[0m[0m tags                 = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m tags_all             = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
    }

[1m  # module.ai_ml.aws_sagemaker_endpoint_configuration.main[0m will be created
[0m  [32m+[0m[0m resource "aws_sagemaker_endpoint_configuration" "main" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "modular-payment-system-sagemaker-endpoint-config"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m region      = "ap-southeast-1"
      [32m+[0m[0m tags        = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m tags_all    = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }

      [32m+[0m[0m production_variants {
          [32m+[0m[0m initial_instance_count = 1
          [32m+[0m[0m initial_variant_weight = 1
          [32m+[0m[0m instance_type          = "ml.t2.medium"
          [32m+[0m[0m model_name             = "modular-payment-system-sagemaker-model"
          [32m+[0m[0m variant_name           = "main"
          [32m+[0m[0m volume_size_in_gb      = (known after apply)
        }
    }

[1m  # module.ai_ml.aws_sagemaker_model.main[0m will be created
[0m  [32m+[0m[0m resource "aws_sagemaker_model" "main" {
      [32m+[0m[0m arn                = (known after apply)
      [32m+[0m[0m execution_role_arn = "arn:aws:iam::727889419553:role/modular-payment-system-sagemaker-role"
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "modular-payment-system-sagemaker-model"
      [32m+[0m[0m region             = "ap-southeast-1"
      [32m+[0m[0m tags               = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m tags_all           = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }

      [32m+[0m[0m inference_execution_config (known after apply)

      [32m+[0m[0m primary_container {
          [32m+[0m[0m image = "727889419553.dkr.ecr.ap-southeast-1.amazonaws.com/modular-payment-system-langflow:latest"
          [32m+[0m[0m mode  = "SingleModel"

          [32m+[0m[0m model_data_source (known after apply)
        }
    }

[1m  # module.analytics.aws_quicksight_data_source.main[0m will be created
[0m  [32m+[0m[0m resource "aws_quicksight_data_source" "main" {
      [32m+[0m[0m arn            = (known after apply)
      [32m+[0m[0m aws_account_id = (known after apply)
      [32m+[0m[0m data_source_id = "modular-payment-system-quicksight-datasource"
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m name           = "modular-payment-system-quicksight-datasource"
      [32m+[0m[0m region         = "ap-southeast-1"
      [32m+[0m[0m tags           = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m tags_all       = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m type           = "AURORA_POSTGRESQL"

      [32m+[0m[0m parameters {
          [32m+[0m[0m aurora_postgresql {
              [32m+[0m[0m database = "modular-payment-systemdb"
              [32m+[0m[0m host     = (known after apply)
              [32m+[0m[0m port     = 5432
            }
        }

      [32m+[0m[0m ssl_properties (known after apply)
    }

[1m  # module.api_gateway.aws_api_gateway_authorizer.main[0m will be created
[0m  [32m+[0m[0m resource "aws_api_gateway_authorizer" "main" {
      [32m+[0m[0m arn                              = (known after apply)
      [32m+[0m[0m authorizer_result_ttl_in_seconds = 300
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m identity_source                  = "method.request.header.Authorization"
      [32m+[0m[0m name                             = "modular-payment-system-authorizer"
      [32m+[0m[0m provider_arns                    = [
          [32m+[0m[0m "arn:aws:cognito-idp:ap-southeast-1:727889419553:userpool/ap-southeast-1_3SscxlHiy",
        ]
      [32m+[0m[0m region                           = "ap-southeast-1"
      [32m+[0m[0m rest_api_id                      = "h1mb922mxb"
      [32m+[0m[0m type                             = "COGNITO_USER_POOLS"
    }

[1m  # module.api_gateway.aws_api_gateway_deployment.main[0m will be created
[0m  [32m+[0m[0m resource "aws_api_gateway_deployment" "main" {
      [32m+[0m[0m created_date = (known after apply)
      [32m+[0m[0m description  = "Deployment for dev environment"
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m region       = "ap-southeast-1"
      [32m+[0m[0m rest_api_id  = "h1mb922mxb"
    }

[1m  # module.api_gateway.aws_api_gateway_integration.ecs[0m will be created
[0m  [32m+[0m[0m resource "aws_api_gateway_integration" "ecs" {
      [32m+[0m[0m cache_namespace         = (known after apply)
      [32m+[0m[0m connection_type         = "INTERNET"
      [32m+[0m[0m http_method             = "ANY"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m integration_http_method = "ANY"
      [32m+[0m[0m passthrough_behavior    = (known after apply)
      [32m+[0m[0m region                  = "ap-southeast-1"
      [32m+[0m[0m resource_id             = "eq54ub"
      [32m+[0m[0m rest_api_id             = "h1mb922mxb"
      [32m+[0m[0m timeout_milliseconds    = 29000
      [32m+[0m[0m type                    = "HTTP_PROXY"
      [32m+[0m[0m uri                     = "http://arn:aws:elasticloadbalancing:ap-southeast-1:727889419553:targetgroup/modular-payment-system-tg/a8716555911a5496"
    }

[1m  # module.api_gateway.aws_api_gateway_integration.lambda[0m will be created
[0m  [32m+[0m[0m resource "aws_api_gateway_integration" "lambda" {
      [32m+[0m[0m cache_namespace         = (known after apply)
      [32m+[0m[0m connection_type         = "INTERNET"
      [32m+[0m[0m http_method             = "ANY"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m integration_http_method = "POST"
      [32m+[0m[0m passthrough_behavior    = (known after apply)
      [32m+[0m[0m region                  = "ap-southeast-1"
      [32m+[0m[0m resource_id             = "eq54ub"
      [32m+[0m[0m rest_api_id             = "h1mb922mxb"
      [32m+[0m[0m timeout_milliseconds    = 29000
      [32m+[0m[0m type                    = "AWS_PROXY"
      [32m+[0m[0m uri                     = (known after apply)
    }

[1m  # module.api_gateway.aws_api_gateway_method.proxy[0m will be created
[0m  [32m+[0m[0m resource "aws_api_gateway_method" "proxy" {
      [32m+[0m[0m api_key_required = false
      [32m+[0m[0m authorization    = "COGNITO_USER_POOLS"
      [32m+[0m[0m authorizer_id    = (known after apply)
      [32m+[0m[0m http_method      = "ANY"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m region           = "ap-southeast-1"
      [32m+[0m[0m resource_id      = "eq54ub"
      [32m+[0m[0m rest_api_id      = "h1mb922mxb"
    }

[1m  # module.api_gateway.aws_api_gateway_stage.main[0m will be created
[0m  [32m+[0m[0m resource "aws_api_gateway_stage" "main" {
      [32m+[0m[0m arn           = (known after apply)
      [32m+[0m[0m deployment_id = (known after apply)
      [32m+[0m[0m execution_arn = (known after apply)
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m invoke_url    = (known after apply)
      [32m+[0m[0m region        = "ap-southeast-1"
      [32m+[0m[0m rest_api_id   = "h1mb922mxb"
      [32m+[0m[0m stage_name    = "dev"
      [32m+[0m[0m tags          = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m tags_all      = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m web_acl_arn   = (known after apply)
    }

[1m  # module.api_gateway.aws_wafv2_web_acl_association.main[0m will be created
[0m  [32m+[0m[0m resource "aws_wafv2_web_acl_association" "main" {
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m region       = "ap-southeast-1"
      [32m+[0m[0m resource_arn = (known after apply)
      [32m+[0m[0m web_acl_arn  = "arn:aws:wafv2:ap-southeast-1:727889419553:regional/webacl/modular-payment-system-waf-acl/88d184d7-349f-46e2-8123-aff81416259a"
    }

[1m  # module.database.aws_rds_cluster.aurora[0m will be created
[0m  [32m+[0m[0m resource "aws_rds_cluster" "aurora" {
      [32m+[0m[0m allocated_storage                     = (known after apply)
      [32m+[0m[0m apply_immediately                     = (known after apply)
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m availability_zones                    = (known after apply)
      [32m+[0m[0m backup_retention_period               = 3
      [32m+[0m[0m ca_certificate_identifier             = (known after apply)
      [32m+[0m[0m ca_certificate_valid_till             = (known after apply)
      [32m+[0m[0m cluster_identifier                    = "modular-payment-system-aurora-cluster"
      [32m+[0m[0m cluster_identifier_prefix             = (known after apply)
      [32m+[0m[0m cluster_members                       = (known after apply)
      [32m+[0m[0m cluster_resource_id                   = (known after apply)
      [32m+[0m[0m cluster_scalability_type              = (known after apply)
      [32m+[0m[0m copy_tags_to_snapshot                 = false
      [32m+[0m[0m database_insights_mode                = (known after apply)
      [32m+[0m[0m database_name                         = "modular-payment-systemdb"
      [32m+[0m[0m db_cluster_parameter_group_name       = (known after apply)
      [32m+[0m[0m db_subnet_group_name                  = "modular-payment-system-db-subnet-group"
      [32m+[0m[0m db_system_id                          = (known after apply)
      [32m+[0m[0m delete_automated_backups              = true
      [32m+[0m[0m deletion_protection                   = false
      [32m+[0m[0m enable_global_write_forwarding        = false
      [32m+[0m[0m enable_http_endpoint                  = false
      [32m+[0m[0m enable_local_write_forwarding         = false
      [32m+[0m[0m endpoint                              = (known after apply)
      [32m+[0m[0m engine                                = "aurora-mysql"
      [32m+[0m[0m engine_lifecycle_support              = (known after apply)
      [32m+[0m[0m engine_mode                           = "provisioned"
      [32m+[0m[0m engine_version                        = "8.0.mysql_aurora.3.08.0"
      [32m+[0m[0m engine_version_actual                 = (known after apply)
      [32m+[0m[0m hosted_zone_id                        = (known after apply)
      [32m+[0m[0m iam_roles                             = (known after apply)
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m kms_key_id                            = (known after apply)
      [32m+[0m[0m master_password                       = (sensitive value)
      [32m+[0m[0m master_password_wo                    = (write-only attribute)
      [32m+[0m[0m master_user_secret                    = (known after apply)
      [32m+[0m[0m master_user_secret_kms_key_id         = (known after apply)
      [32m+[0m[0m master_username                       = "admin"
      [32m+[0m[0m monitoring_interval                   = (known after apply)
      [32m+[0m[0m monitoring_role_arn                   = (known after apply)
      [32m+[0m[0m network_type                          = (known after apply)
      [32m+[0m[0m performance_insights_kms_key_id       = (known after apply)
      [32m+[0m[0m performance_insights_retention_period = (known after apply)
      [32m+[0m[0m port                                  = (known after apply)
      [32m+[0m[0m preferred_backup_window               = "07:00-09:00"
      [32m+[0m[0m preferred_maintenance_window          = (known after apply)
      [32m+[0m[0m reader_endpoint                       = (known after apply)
      [32m+[0m[0m region                                = "ap-southeast-1"
      [32m+[0m[0m skip_final_snapshot                   = false
      [32m+[0m[0m storage_encrypted                     = (known after apply)
      [32m+[0m[0m storage_type                          = (known after apply)
      [32m+[0m[0m tags                                  = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m tags_all                              = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m vpc_security_group_ids                = [
          [32m+[0m[0m "sg-0409872fa5bedda19",
        ]
    }

[1m  # module.database.aws_rds_cluster_instance.aurora_instance[0][0m will be created
[0m  [32m+[0m[0m resource "aws_rds_cluster_instance" "aurora_instance" {
      [32m+[0m[0m apply_immediately                     = (known after apply)
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m auto_minor_version_upgrade            = true
      [32m+[0m[0m availability_zone                     = (known after apply)
      [32m+[0m[0m ca_cert_identifier                    = (known after apply)
      [32m+[0m[0m cluster_identifier                    = (known after apply)
      [32m+[0m[0m copy_tags_to_snapshot                 = false
      [32m+[0m[0m db_parameter_group_name               = (known after apply)
      [32m+[0m[0m db_subnet_group_name                  = (known after apply)
      [32m+[0m[0m dbi_resource_id                       = (known after apply)
      [32m+[0m[0m endpoint                              = (known after apply)
      [32m+[0m[0m engine                                = "aurora-mysql"
      [32m+[0m[0m engine_version                        = "8.0.mysql_aurora.3.08.0"
      [32m+[0m[0m engine_version_actual                 = (known after apply)
      [32m+[0m[0m force_destroy                         = false
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m identifier                            = "modular-payment-system-aurora-instance-1"
      [32m+[0m[0m identifier_prefix                     = (known after apply)
      [32m+[0m[0m instance_class                        = "db.t3.medium"
      [32m+[0m[0m kms_key_id                            = (known after apply)
      [32m+[0m[0m monitoring_interval                   = 0
      [32m+[0m[0m monitoring_role_arn                   = (known after apply)
      [32m+[0m[0m network_type                          = (known after apply)
      [32m+[0m[0m performance_insights_enabled          = (known after apply)
      [32m+[0m[0m performance_insights_kms_key_id       = (known after apply)
      [32m+[0m[0m performance_insights_retention_period = (known after apply)
      [32m+[0m[0m port                                  = (known after apply)
      [32m+[0m[0m preferred_backup_window               = (known after apply)
      [32m+[0m[0m preferred_maintenance_window          = (known after apply)
      [32m+[0m[0m promotion_tier                        = 0
      [32m+[0m[0m publicly_accessible                   = (known after apply)
      [32m+[0m[0m region                                = "ap-southeast-1"
      [32m+[0m[0m storage_encrypted                     = (known after apply)
      [32m+[0m[0m tags                                  = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m tags_all                              = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m writer                                = (known after apply)
    }

[1m  # module.database.aws_rds_cluster_instance.aurora_instance[1][0m will be created
[0m  [32m+[0m[0m resource "aws_rds_cluster_instance" "aurora_instance" {
      [32m+[0m[0m apply_immediately                     = (known after apply)
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m auto_minor_version_upgrade            = true
      [32m+[0m[0m availability_zone                     = (known after apply)
      [32m+[0m[0m ca_cert_identifier                    = (known after apply)
      [32m+[0m[0m cluster_identifier                    = (known after apply)
      [32m+[0m[0m copy_tags_to_snapshot                 = false
      [32m+[0m[0m db_parameter_group_name               = (known after apply)
      [32m+[0m[0m db_subnet_group_name                  = (known after apply)
      [32m+[0m[0m dbi_resource_id                       = (known after apply)
      [32m+[0m[0m endpoint                              = (known after apply)
      [32m+[0m[0m engine                                = "aurora-mysql"
      [32m+[0m[0m engine_version                        = "8.0.mysql_aurora.3.08.0"
      [32m+[0m[0m engine_version_actual                 = (known after apply)
      [32m+[0m[0m force_destroy                         = false
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m identifier                            = "modular-payment-system-aurora-instance-2"
      [32m+[0m[0m identifier_prefix                     = (known after apply)
      [32m+[0m[0m instance_class                        = "db.t3.medium"
      [32m+[0m[0m kms_key_id                            = (known after apply)
      [32m+[0m[0m monitoring_interval                   = 0
      [32m+[0m[0m monitoring_role_arn                   = (known after apply)
      [32m+[0m[0m network_type                          = (known after apply)
      [32m+[0m[0m performance_insights_enabled          = (known after apply)
      [32m+[0m[0m performance_insights_kms_key_id       = (known after apply)
      [32m+[0m[0m performance_insights_retention_period = (known after apply)
      [32m+[0m[0m port                                  = (known after apply)
      [32m+[0m[0m preferred_backup_window               = (known after apply)
      [32m+[0m[0m preferred_maintenance_window          = (known after apply)
      [32m+[0m[0m promotion_tier                        = 0
      [32m+[0m[0m publicly_accessible                   = (known after apply)
      [32m+[0m[0m region                                = "ap-southeast-1"
      [32m+[0m[0m storage_encrypted                     = (known after apply)
      [32m+[0m[0m tags                                  = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m tags_all                              = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m writer                                = (known after apply)
    }

[1m  # module.database.aws_security_group.rds[0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_security_group" "rds" {
        id                     = "sg-0409872fa5bedda19"
      [33m~[0m[0m ingress                = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = []
              [31m-[0m[0m from_port        = 5432
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = [
                  [31m-[0m[0m "sg-062998849b641fba7",
                  [31m-[0m[0m "sg-0f51f9fbecf51a7e4",
                ]
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 5432
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m from_port        = 3306
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = [
                  [32m+[0m[0m "sg-062998849b641fba7",
                  [32m+[0m[0m "sg-0f51f9fbecf51a7e4",
                ]
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 3306
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
        name                   = "modular-payment-system-rds-sg-20250713072908873300000001"
        tags                   = {
            "Environment" = "dev"
            "ManagedBy"   = "Terraform"
            "Name"        = "modular-payment-system-rds-sg"
            "Project"     = "modular-payment-system"
        }
        [90m# (9 unchanged attributes hidden)[0m[0m
    }

[1m  # module.ecs.aws_ecs_service.main[0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_service" "main" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m availability_zone_rebalancing      = "DISABLED"
      [32m+[0m[0m cluster                            = "arn:aws:ecs:ap-southeast-1:727889419553:cluster/modular-payment-system-ecs-cluster"
      [32m+[0m[0m deployment_maximum_percent         = 200
      [32m+[0m[0m deployment_minimum_healthy_percent = 100
      [32m+[0m[0m desired_count                      = 2
      [32m+[0m[0m enable_ecs_managed_tags            = false
      [32m+[0m[0m enable_execute_command             = false
      [32m+[0m[0m iam_role                           = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m launch_type                        = "FARGATE"
      [32m+[0m[0m name                               = "modular-payment-system-ecs-service"
      [32m+[0m[0m platform_version                   = (known after apply)
      [32m+[0m[0m region                             = "ap-southeast-1"
      [32m+[0m[0m scheduling_strategy                = "REPLICA"
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m task_definition                    = (known after apply)
      [32m+[0m[0m triggers                           = (known after apply)
      [32m+[0m[0m wait_for_steady_state              = false

      [32m+[0m[0m load_balancer {
          [32m+[0m[0m container_name   = "modular-payment-system-banking-api"
          [32m+[0m[0m container_port   = 80
          [32m+[0m[0m target_group_arn = "arn:aws:elasticloadbalancing:ap-southeast-1:727889419553:targetgroup/modular-payment-system-tg/a8716555911a5496"
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m network_configuration {
          [32m+[0m[0m assign_public_ip = false
          [32m+[0m[0m security_groups  = [
              [32m+[0m[0m "sg-0f51f9fbecf51a7e4",
            ]
          [32m+[0m[0m subnets          = [
              [32m+[0m[0m "subnet-070a8c30147826050",
              [32m+[0m[0m "subnet-0767d9bb1e244c29e",
              [32m+[0m[0m "subnet-0eab169ada1e34ed4",
            ]
        }
    }

[1m  # module.ecs.aws_ecs_task_definition.banking_api[0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "banking_api" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = (known after apply)
      [32m+[0m[0m cpu                      = "256"
      [32m+[0m[0m enable_fault_injection   = (known after apply)
      [32m+[0m[0m execution_role_arn       = "arn:aws:iam::727889419553:role/modular-payment-system-ecs-task-execution-role"
      [32m+[0m[0m family                   = "modular-payment-system-banking-api"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "512"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m region                   = "ap-southeast-1"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags                     = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m tags_all                 = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m track_latest             = false
    }

[1m  # module.lambda.aws_cloudwatch_log_group.processor_lambda_log_group[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "processor_lambda_log_group" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m log_group_class   = (known after apply)
      [32m+[0m[0m name              = "/aws/lambda/modular-payment-system-processor"
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m region            = "ap-southeast-1"
      [32m+[0m[0m retention_in_days = 14
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags              = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m tags_all          = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
    }

[1m  # module.lambda.aws_cloudwatch_log_group.router_lambda_log_group[0m will be created
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "router_lambda_log_group" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m log_group_class   = (known after apply)
      [32m+[0m[0m name              = "/aws/lambda/modular-payment-system-router"
      [32m+[0m[0m name_prefix       = (known after apply)
      [32m+[0m[0m region            = "ap-southeast-1"
      [32m+[0m[0m retention_in_days = 14
      [32m+[0m[0m skip_destroy      = false
      [32m+[0m[0m tags              = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m tags_all          = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
    }

[1m  # module.lambda.aws_lambda_function.processor[0m will be created
[0m  [32m+[0m[0m resource "aws_lambda_function" "processor" {
      [32m+[0m[0m architectures                  = (known after apply)
      [32m+[0m[0m arn                            = (known after apply)
      [32m+[0m[0m code_sha256                    = (known after apply)
      [32m+[0m[0m filename                       = "modules/lambda/src/processor/processor.zip"
      [32m+[0m[0m function_name                  = "modular-payment-system-processor"
      [32m+[0m[0m handler                        = "index.handler"
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m invoke_arn                     = (known after apply)
      [32m+[0m[0m last_modified                  = (known after apply)
      [32m+[0m[0m memory_size                    = 256
      [32m+[0m[0m package_type                   = "Zip"
      [32m+[0m[0m publish                        = false
      [32m+[0m[0m qualified_arn                  = (known after apply)
      [32m+[0m[0m qualified_invoke_arn           = (known after apply)
      [32m+[0m[0m region                         = "ap-southeast-1"
      [32m+[0m[0m reserved_concurrent_executions = -1
      [32m+[0m[0m role                           = "arn:aws:iam::727889419553:role/modular-payment-system-processor-lambda-role"
      [32m+[0m[0m runtime                        = "nodejs18.x"
      [32m+[0m[0m signing_job_arn                = (known after apply)
      [32m+[0m[0m signing_profile_version_arn    = (known after apply)
      [32m+[0m[0m skip_destroy                   = false
      [32m+[0m[0m source_code_hash               = "fehKJLLez+mWV7ALGAgzhSgum7+gAmhzXKXviZtCnfc="
      [32m+[0m[0m source_code_size               = (known after apply)
      [32m+[0m[0m tags                           = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m tags_all                       = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m timeout                        = 60
      [32m+[0m[0m version                        = (known after apply)

      [32m+[0m[0m environment {
          [32m+[0m[0m variables = (known after apply)
        }

      [32m+[0m[0m ephemeral_storage (known after apply)

      [32m+[0m[0m logging_config (known after apply)

      [32m+[0m[0m tracing_config (known after apply)

      [32m+[0m[0m vpc_config {
          [32m+[0m[0m ipv6_allowed_for_dual_stack = false
          [32m+[0m[0m security_group_ids          = [
              [32m+[0m[0m "sg-062998849b641fba7",
            ]
          [32m+[0m[0m subnet_ids                  = [
              [32m+[0m[0m "subnet-070a8c30147826050",
              [32m+[0m[0m "subnet-0767d9bb1e244c29e",
              [32m+[0m[0m "subnet-0eab169ada1e34ed4",
            ]
          [32m+[0m[0m vpc_id                      = (known after apply)
        }
    }

[1m  # module.lambda.aws_lambda_function.router[0m will be created
[0m  [32m+[0m[0m resource "aws_lambda_function" "router" {
      [32m+[0m[0m architectures                  = (known after apply)
      [32m+[0m[0m arn                            = (known after apply)
      [32m+[0m[0m code_sha256                    = (known after apply)
      [32m+[0m[0m filename                       = "modules/lambda/src/router/router.zip"
      [32m+[0m[0m function_name                  = "modular-payment-system-router"
      [32m+[0m[0m handler                        = "index.handler"
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m invoke_arn                     = (known after apply)
      [32m+[0m[0m last_modified                  = (known after apply)
      [32m+[0m[0m memory_size                    = 128
      [32m+[0m[0m package_type                   = "Zip"
      [32m+[0m[0m publish                        = false
      [32m+[0m[0m qualified_arn                  = (known after apply)
      [32m+[0m[0m qualified_invoke_arn           = (known after apply)
      [32m+[0m[0m region                         = "ap-southeast-1"
      [32m+[0m[0m reserved_concurrent_executions = -1
      [32m+[0m[0m role                           = "arn:aws:iam::727889419553:role/modular-payment-system-router-lambda-role"
      [32m+[0m[0m runtime                        = "nodejs18.x"
      [32m+[0m[0m signing_job_arn                = (known after apply)
      [32m+[0m[0m signing_profile_version_arn    = (known after apply)
      [32m+[0m[0m skip_destroy                   = false
      [32m+[0m[0m source_code_hash               = "TCjno4v2RKdMhZ8IX3DjK1vY0Fm6IyulE3eo1RFbtV4="
      [32m+[0m[0m source_code_size               = (known after apply)
      [32m+[0m[0m tags                           = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m tags_all                       = {
          [32m+[0m[0m "Environment" = "dev"
          [32m+[0m[0m "ManagedBy"   = "Terraform"
          [32m+[0m[0m "Project"     = "modular-payment-system"
        }
      [32m+[0m[0m timeout                        = 30
      [32m+[0m[0m version                        = (known after apply)

      [32m+[0m[0m environment {
          [32m+[0m[0m variables = (known after apply)
        }

      [32m+[0m[0m ephemeral_storage (known after apply)

      [32m+[0m[0m logging_config (known after apply)

      [32m+[0m[0m tracing_config (known after apply)

      [32m+[0m[0m vpc_config {
          [32m+[0m[0m ipv6_allowed_for_dual_stack = false
          [32m+[0m[0m security_group_ids          = [
              [32m+[0m[0m "sg-062998849b641fba7",
            ]
          [32m+[0m[0m subnet_ids                  = [
              [32m+[0m[0m "subnet-070a8c30147826050",
              [32m+[0m[0m "subnet-0767d9bb1e244c29e",
              [32m+[0m[0m "subnet-0eab169ada1e34ed4",
            ]
          [32m+[0m[0m vpc_id                      = (known after apply)
        }
    }

[1mPlan:[0m 20 to add, 1 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m api_gateway_url                = "https://h1mb922mxb.execute-api.ap-southeast-1.amazonaws.com/dev/"
  [32m+[0m[0m aurora_cluster_endpoint        = (known after apply)
  [32m+[0m[0m aurora_reader_endpoint         = (known after apply)
